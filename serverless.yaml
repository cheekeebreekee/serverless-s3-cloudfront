service: serverless-static-website

provider:
  name: aws
  profile: cheekeebreekee
  stage: dev

resources:
  Resources:
    ## Specifying S3 bucket (This is the logical name of the bucket which will be used in CloudFormation)
    ServerlessStaticBucket:
      Type: AWS::S3::Bucket
      Properties:
        ## This is the actual name of the bucket
        BucketName: ${self:custom.s3Bucket}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: ServerlessStaticBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.s3Bucket}/*

    ServerlessStaticWebsiteCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - yahorsimak.com
          ViewerCertificate:
            AcmCertificateArn: arn:aws:acm:us-east-1:037736035618:certificate/e0513690-1124-4b42-bdac-a6a5d1aa029e
            MinimumProtocolVersion: 'TLSv1.2_2019'
            SslSupportMethod: 'sni-only'
          Origins:
            - DomainName: ${self:custom.s3Bucket}.s3.amazonaws.com
              ## An identifier for the origin which must be unique within the distribution
              Id: ServerlessStaticWebsite
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Enabled: 'true'
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: ServerlessStaticWebsite
            ## Defining if and how the QueryString and Cookies are forwarded to the origin which in this case is S3
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ## The protocol that users can use to access the files in the origin. To allow HTTP use `allow-all`
            ViewerProtocolPolicy: redirect-to-https
            ## The certificate to use when viewers use HTTPS to request objects.
          # ViewerCertificate:
          #   CloudFrontDefaultCertificate: 'true'

  Outputs:
    ServerlessStaticBucketName:
      Value:
        Ref: ServerlessStaticBucket
    ## TODO: delete when showing cloudfront integration
    ServerlessStaticBucketURL:
      Value:
        Fn::GetAtt: [ "ServerlessStaticBucket", "WebsiteURL" ]
    ServerlessStaticWebsiteCloudFrontDistributionOutput:
      Value:
        Fn::GetAtt: [ "ServerlessStaticWebsiteCloudFrontDistribution", "DomainName" ]

plugins:
  - serverless-s3-sync

custom:
  # Load our secret environment variables based on the current stage.
  # Fallback to default if its not in prod
  s3Sync:
    - bucketNameKey: ServerlessStaticBucketName
      localDir: build/
  ## TODO: try to use this variable instead direct bucket name
  s3Bucket: serverless-static-bucket